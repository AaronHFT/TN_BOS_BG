<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.java.dao.outStoreMapper">
<select id="orderAll" resultType="map">
    SELECT * ,IFNULL((SELECT COUNT(*) FROM goodreach g WHERE g.order_id=o.order_id AND g.goodReach_state=1  ),0) 'num'
FROM `order` o ,customer c
WHERE o.cus_id=c.cus_id and o.orderType_id=3
</select>
<select id="goodreachAll" resultType="map" parameterType="map">
    SELECT * ,IFNULL((SELECT COUNT(*) FROM pickuplist p WHERE p.goodSendOut_id=g.goodReach_id ),0 ) 'num'
FROM goodreach g
WHERE g.goodReach_state=1 AND g.order_id=#{order_id}
</select>
    <insert id="insgoodreach" parameterType="map">
        INSERT pickUpList VALUES(FLOOR(RAND()*100000),#{goodReach_id},#{goodReach_goodCode},#{goodReach_ExceptNum},#{goodReach_weight},#{goodReach_volume},sysdate());
    </insert>
    <select id="pickuplistAll" resultType="map">
         SELECT *,IFNULL( (SELECT COUNT(*) FROM goodchange g WHERE p.goodSendOut_id=g.goodChange_id),0) 'num'
FROM pickuplist p,good g,goodreach gr
WHERE p.good_code=g.good_code AND gr.goodReach_id=p.goodSendOut_id
    </select>
    <insert id="insgoodchange" parameterType="map">
        INSERT goodchange VALUES(FLOOR(RAND() * 100000),#{good_line},#{goodChange_id},#{store_position_id},#{goodChange_goodId},#{truck_id},
#{pilot_id},#{Order_id},#{client_id},sysdate(),#{goodChange_producedDate},#{goodChange_secureDate},#{goodChange_num},
#{goodChange_unit},#{goodChange_weight},#{goodChange_volume},#{goodChange_lv},3,1
)
    </insert>
    <select id="onegoodreach" parameterType="map" resultType="map">
        SELECT * FROM goodreach WHERE goodReach_id=#{goodSendOut_id}
    </select>
    <select id="goodchangeAll" resultType="map" parameterType="map">
         SELECT *,a.goodChange_num - IFNULL((SELECT SUM(goodChange_num) FROM goodChange c WHERE state = 1 AND a.good_line=c.good_line),0) AS num,a.goodChange_weight - IFNULL((SELECT SUM(goodChange_weight) FROM goodChange c WHERE state = 1 AND a.good_line=c.good_line),0) AS weight,a.goodChange_volume - IFNULL((SELECT SUM(goodChange_volume) FROM goodChange c WHERE state = 1 AND a.good_line=c.good_line),0) AS volume
FROM goodChange a,good
WHERE state=0
      AND (a.goodChange_num - (SELECT SUM(goodChange_num) FROM goodChange b WHERE state = 1 AND a.good_line=b.good_line)&gt;0 OR (SELECT SUM(goodChange_num) FROM goodChange b WHERE state = 1 AND a.good_line=b.good_line) IS NULL)
      AND a.goodChange_goodId=good.good_id
       AND a.goodChange_goodId=#{id}
    </select>

</mapper>
